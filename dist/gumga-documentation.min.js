(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";!function(){function Documentation($interpolate,$uibModal,GumgaRest){function controller($scope,$element,$attrs){var ctrl=this,Service=($scope.$parent,new GumgaRest(ctrl.apiUrl)),confirmButton=$attrs.confirmButton?$attrs.confirmButton:"Confirmar",confirmButtonClass=$attrs.confirmButtonClass?$attrs.confirmButtonClass:"btn btn-primary",defineModalTemplate=($attrs.modalTitle&&$attrs.modalTitle,function defineModalTemplate(isEditable){if(isEditable)return'\n          <div class="modal-header">\n            <h4>{{ ::ctrl.title }}</h4>\n          </div>\n          <div class="modal-body">\n            <form novalidate>\n\n              <textarea  class="form-control" style="width: 100%; resize: none;" ng-model="ctrl.message" ng-blur="ctrl.afterEditing(ctrl.message)">\n              </textarea>\n            </form>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="{{ ::ctrl.confirmButtonClass }}" ng-click="ctrl.close(ctrl.message)"> {{ ::ctrl.confirmButton }}</button>\n          </div>';return'\n          <div class="modal-header">\n            <h4>{{ ::ctrl.title }}</h4>\n          </div>\n          <div class="modal-body">\n            <p>{{ ::ctrl.message }}</p>\n          </div>\n          '});ctrl.openModal=function(_){function controller($uibModalInstance,value,APIURLService,Title,$scope,Key,ConfirmButton,ConfirmButtonClass){var ctrl=this;ctrl.message=value.value,ctrl.title=Title,ctrl.confirmButton=ConfirmButton,ctrl.confirmButtonClass=ConfirmButtonClass,ctrl.close=function(model){Service.extend("POST","",{key:Key,value:model}).then(function(_){return $uibModalInstance.close()},function(_){return $scope.$broadcast("postFailed")})}}var template=defineModalTemplate(ctrl.canEdit),backdrop=!ctrl.canEdit||"static",resolve={value:function value(){return Service.extend("GET","/"+ctrl.key).then(function(data){return data.data})},APIURLService:function APIURLService(){return Service},Title:function Title(){return ctrl.modalTitle},Key:function Key(){return ctrl.key},ConfirmButton:function ConfirmButton(){return confirmButton},ConfirmButtonClass:function ConfirmButtonClass(){return confirmButtonClass}};controller.$inject=["$uibModalInstance","value","APIURLService","Title","$scope","Key","ConfirmButton","ConfirmButtonClass"],$uibModal.open({template:template,resolve:resolve,controller:controller,controllerAs:"ctrl",backdrop:backdrop,size:"sm"})}}return controller.$inject=["$scope","$element","$attrs"],{restrict:"E",scope:{canEdit:"=",key:"@",apiUrl:"@",modalTitle:"@?"},bindToController:!0,controllerAs:"ctrl",controller:controller,template:'\n      <a ng-click="ctrl.openModal()">\n        <span class="glyphicon glyphicon-info-sign gumga-documentation-info">\n        </span>\n      </a>\n      '}}Documentation.$inject=["$interpolate","$uibModal","GumgaRest"],angular.module("gumga.documentation",[]).directive("gumgaDocumentation",Documentation)}()},{}]},{},[1]);
//# sourceMappingURL=gumga-documentation.min.js.map